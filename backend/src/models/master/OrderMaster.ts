import prisma from "../../PrismaConnection";
import { HelpdeskOrderMaster } from "../../../generated/prisma";

// OrderMaster class is used for encapsulating Order Master properties with all of its method for creating, updating or retrieving data from database. 
// It is created based on HelpdeskOrderMaster table structure in database and to align with the type created by Prisma ORM. 
class OrderMaster {
  readonly code: string;
  readonly descrption: string;
  readonly isActive: boolean;

  // Constructor for initializing OrderMaster class.
  constructor(code: string = "", descrption: string = "", isActive: boolean = false) {
    this.code = code;
    this.descrption = descrption;
    this.isActive = isActive;
  };  

  // Second constructor of OrderMaster class which uses HelpdeskOrderMaster type (generated from Prisma ORM based on the corresponding table structure) as parameter. 
  static createFromType = (data: HelpdeskOrderMaster) => {
    return new OrderMaster(data.Code, data.Descrption, data.IsActive === "Y");
  };

  // Converting OrderMaster class back to HelpdeskOrderMaster type for database operations purpose to utilizing built-in database operation for each type 
  // as Prisma ORM has provided all database operations for each of its created type. 
  createAsType = () => {
    const data: HelpdeskOrderMaster = {
      Code: this.code,
      Descrption: this.descrption,
      IsActive: this.isActive ? "Y" : "N"
    };
    return data;
  };

  // Check on database for the table on whether the "code" value provided by user is already exists in database. Code is the primary key 
  // of HelpdeskOrderMaster table, thus the value couldn't be redundant.
  static checkOrderCodeAvailability = async (code: string) => {
    return !(await prisma.helpdeskOrderMaster.findFirst({
      where: { Code: code }
    }));
  };

  // Method acts as interface to retrieve all Order Master data from database table using method generated by Prisma ORM.
  static getOrderMasterList = async () => {
    const getOrderMasterListQuery: HelpdeskOrderMaster[] = await prisma.helpdeskOrderMaster.findMany();
    return getOrderMasterListQuery.map(order => OrderMaster.createFromType(order));
  };

  // Method acts as interface to insert Order Master data into table using method generated by Prisma ORM.
  createOrderMaster = async () => {
    return prisma.helpdeskOrderMaster.create({
      data: this.createAsType()
    });
  };

  // Method acts as interface to update Order Master data into table using method generated by Prisma ORM.
  updateOrderMaster = async () => {
    return prisma.helpdeskOrderMaster.update({
      where: { Code: this.code },
      data: this.createAsType()
    });
  };
};

export default OrderMaster;
